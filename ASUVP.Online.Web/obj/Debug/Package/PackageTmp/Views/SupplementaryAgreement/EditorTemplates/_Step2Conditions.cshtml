@using System.Web.UI.WebControls
@using ASUVP.Online.Web.Models.SupplementaryAgreement
@using ASUVP.Core.DataAccess.Model

@model SupplementaryAgreementWizardVM

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "Conditions";
        settings.CallbackRouteValues = new
        {
            Controller = "SupplementaryAgreement",
            Action = "SupplementaryConditions"
        };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "SupplementaryAgreement", Action = "AddNewCondition" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "SupplementaryAgreement", Action = "UpdateCondition" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "SupplementaryAgreement", Action = "DeleteCondition" };

        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPopup.EditForm.Width = 600;
        settings.Width = Unit.Percentage(100);

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Pixel(200);
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.Width = Unit.Percentage(100);
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;

        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;

        settings.KeyFieldName = nameof(DocumentCondition.ConditionId);
        settings.Columns.Add(column =>
        {
            column.FieldName = nameof(DocumentCondition.ConditionId);
            column.Caption = "Условие";
            column.Width = Unit.Percentage(40);
            column.EditorProperties().ComboBox(p =>
            {
                p.TextField = nameof(DocumentConditionList.ConditionName);
                p.ValueField = nameof(DocumentConditionList.Id);
                p.DataSource = Model.PossibleConditions;
            });
        });
        settings.Columns.Add(nameof(DocumentCondition.ValueString), "Значение").Width = Unit.Percentage(25);
        settings.Columns.Add(nameof(DocumentCondition.ConditionLimitValue), "Примечание").Width = Unit.Percentage(35);

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
        };

        settings.ApplyBasicLayout();
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model.Conditions).GetHtml()